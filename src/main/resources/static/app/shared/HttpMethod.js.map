{"version":3,"file":"HttpMethod.js","sourceRoot":"","sources":["../../home/duc/angular2-quickstart/web-rss-frontend/tmp/broccoli_type_script_compiler-input_base_path-brJ7QIW9.tmp/0/src/app/shared/HttpMethod.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Headers, Http, Response,URLSearchParams} from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class HttpMethod {\n\n    constructor(private http: Http){}\n\n\n     get(url: string,param?: URLSearchParams): Promise<Response> {\n        return this.http.get(url,{search: param})\n            .toPromise()\n            .then(res => {\n                console.log('get status code: ' + res.status);\n                // console.log('body response: ' + res.text());\n                return res;\n            })\n            .catch(this.handleError);\n    }\n\n    // call post to server\n    post(json: string, url: string,param?: URLSearchParams): Promise<Response> {\n        console.log('post chay voi gia tri: ' + JSON.stringify(json));\n        let headers = new Headers({\n            'Content-Type': 'application/json'\n        });\n\n        return this.http.post(url, json, {headers:headers,search:param})\n            .toPromise()\n            .then(res => {\n                console.log('post status code: ' + res.status);\n                // console.log('body response: ' + res.text());\n                return res;\n            })\n            .catch(this.handleError);\n    }\n\n    // call put to server\n    put(json: string, url: string,param?: URLSearchParams): Promise<Response> {\n        console.log('chay put voi gia tri: ' + json);\n        let headers = new Headers({\n            'Content-Type': 'application/json'\n        });\n\n        return this.http.put(url, json,{ headers: headers, search: param })\n            .toPromise()\n            .then(res => {\n                console.log('put status code: ' + res.status);\n                // console.log('body response: ' + res.text());\n                return res;\n            })\n            .catch(this.handleError);\n\n    }\n\n    // call delete to server\n    delete(url: string,param?: URLSearchParams): Promise<Response> {\n        console.log('chay delete');\n\n        return this.http.delete(url,{search: param})\n            .toPromise()\n            .then(res => {\n                console.log('delete status code: ' + res.status);\n                console.log('delete body: ' + res.text());\n                return res;\n            })\n            .catch(this.handleError);\n    }\n\n    // handle error\n    handleError(error: any): Promise<void> {\n        console.error('An error occurred', JSON.stringify(error.json()));\n        let objError = error.json();\n        switch (error.status) {\n            case 406:\n                alert(objError.message || error);\n                break;\n            case 404:\n                alert(objError.message || error);\n                break;\n            default:\n                alert('có lỗi lạ: ' + (objError.message || error));\n                break;\n        }\n        return Promise.reject(error);\n    }\n}"]}